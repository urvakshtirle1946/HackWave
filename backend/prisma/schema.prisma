generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Supplier {
  id               String     @id @default(uuid())
  name             String
  country          String
  industry         String
  reliabilityScore Int
  shipments        Shipment[] @relation("SupplierShipments")
}

model Customer {
  id             String     @id @default(uuid())
  name           String
  country        String
  industry       String
  demandForecast Int
  shipments      Shipment[] @relation("CustomerShipments")
}

model PortHub {
  id       String @id @default(uuid())
  name     String
  country  String
  type     String
  status   String
  capacity Int
}

model Warehouse {
  id        String      @id @default(uuid())
  name      String
  country   String
  capacity  Int
  type      String
  status    String
  inventory Inventory[]
}

model Shipment {
  id                      String               @id @default(uuid())
  supplierId              String
  customerId              String
  originLocationType      String
  destinationLocationType String
  mode                    String
  departureTime           DateTime
  ETA                     DateTime
  status                  String
  riskScore               Int
  destinationLocation     String
  originLocation          String
  routes                  Route[]
  customer                Customer             @relation("CustomerShipments", fields: [customerId], references: [id])
  supplier                Supplier             @relation("SupplierShipments", fields: [supplierId], references: [id])
  disruptions             ShipmentDisruption[]
}

model Route {
  id               String   @id @default(uuid())
  shipmentId       String
  fromLocationType String
  toLocationType   String
  sequenceNumber   Int
  mode             String
  carrierName      String
  travelTimeEst    Int
  costEst          Float
  fromLocation     String
  toLocation       String
  shipment         Shipment @relation(fields: [shipmentId], references: [id])
}

model RoadFleet {
  id          String @id @default(uuid())
  vehicleType String
  capacity    Int
  driverName  String
  status      String
}

model AirCargo {
  id                 String @id @default(uuid())
  airline            String
  flightNo           String
  capacity           Int
  departureAirportId String
  arrivalAirportId   String
  status             String
}

model RailCargo {
  id             String @id @default(uuid())
  trainNo        String
  railOperator   String
  capacity       Int
  departureHubId String
  arrivalHubId   String
  status         String
}

model Disruption {
  id                String               @id @default(uuid())
  type              String
  locationType      String
  severity          String
  description       String
  startTime         DateTime
  endTime           DateTime?
  status            String               @default("monitoring")
  location          String               @default("Unknown")
  affectedShipments ShipmentDisruption[]
}

model ShipmentDisruption {
  id               String     @id @default(uuid())
  shipmentId       String
  disruptionId     String
  impactDelayHours Int
  rerouteNeeded    Boolean
  extraCost        Float
  disruption       Disruption @relation(fields: [disruptionId], references: [id])
  shipment         Shipment   @relation(fields: [shipmentId], references: [id])
}

model Inventory {
  id           String    @id @default(uuid())
  warehouseId  String
  productName  String
  sku          String
  quantity     Int
  reorderPoint Int
  lastUpdated  DateTime  @updatedAt
  warehouse    Warehouse @relation(fields: [warehouseId], references: [id])
}
